class Solution {

public:

    int rangeBitwiseAnd(int m, int n) {

        unsigned int diff = n - m;

	if(diff == 0) return n;



	unsigned int ret = 0;

	unsigned int bit = 1;

	

	for(unsigned int i=0;i<32;i++){

		bit = 1;

		if(diff <= 1<<(i+1)){

			for(unsigned int j=m;j<=n;j++){

				bit = bit & ((j>>i)&1);

				if(bit == 0) break;

			}

			if(bit == 1) ret = ret + (1<<i);  //the priority of << is lower than + 

		}

	}	



	return ret;

    }

};
